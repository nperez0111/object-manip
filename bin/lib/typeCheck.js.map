{"version":3,"sources":["../../src/lib/typeCheck.js"],"names":[],"mappings":";;;;;;;;QAcgB,yB,GAAA,yB;QA+BA,4B,GAAA,4B;QAOA,mC,GAAA,mC;QAcA,qB,GAAA,qB;;AAlEhB;;AAKA;;AASO,SAAS,yBAAT,CAAoC,WAApC,EAAkD;;AAErD,WAAO,qBAAU,WAAV,EAAuB,UAAW,GAAX,EAAiB;AAC3C,eAAO,GAAP;AACH,KAFM,EAEH,IAFG,CAEG,UAAW,GAAX,EAAgB,KAAhB,EAAuB,GAAvB,EAA6B;AACnC,YAAK,oBAAU,GAAV,CAAL,EAAuB;AACnB,mBAAO,KAAP;AACH;AACD,YAAK,mBAAS,GAAT,CAAL,EAAsB;AAClB,gBAAK,oBAAU,IAAK,CAAL,CAAV,CAAL,EAA4B;AACxB,uBAAO,KAAP;AACH;AACD,gBAAK,mBAAS,GAAT,KAAkB,IAAI,MAAJ,IAAc,CAArC,EAAyC;AACrC,oBAAK,oBAAU,IAAK,CAAL,CAAV,KAAwB,kBAAQ,IAAK,CAAL,CAAR,CAA7B,EAAkD;AAC9C,2BAAO,KAAP;AACH;AACJ;AACD,oBAAQ,IAAR,CAAc,wBAAwB,GAAxB,GAA8B,2GAA9B,GAA4I,KAAK,SAAL,CAAgB,GAAhB,CAA1J;AACA,mBAAO,IAAP;AACH;AACD,YAAK,kBAAQ,GAAR,CAAL,EAAqB;AACjB,mBAAO,KAAP;AACH;AACD,YAAK,iBAAO,GAAP,CAAL,EAAoB;AAChB,mBAAO,0BAA2B,GAA3B,CAAP;AACH;AACD,gBAAQ,IAAR,CAAc,0FAA0F,GAA1F,GAAgG,qBAAhG,WAAiI,GAAjI,yCAAiI,GAAjI,KAAyI,YAAzI,GAAwJ,GAAxJ,GAA8J,GAA5K;AACA,eAAO,IAAP;AACH,KA1BM,CAAP;AA2BH;;AAEM,SAAS,4BAAT,CAAuC,WAAvC,EAAqD;AACxD,QAAK,kBAAmB,WAAnB,KAAoC,0BAA2B,WAA3B,CAAzC,EAAoF;AAChF,eAAO,KAAP;AACH;AACD,WAAO,IAAP;AACH;;AAEM,SAAS,mCAAT,CAA8C,GAA9C,EAAmD,WAAnD,EAAiE;AACpE,QAAI,QAAQ,OAAO,IAAP,CAAa,WAAb,EAA2B,MAA3B,CAAmC,UAAW,GAAX,EAAiB;AAC5D,eAAO,sBAAY,GAAZ,EAAiB,GAAjB,CAAP;AACH,KAFW,CAAZ;;AAIA,WAAO,sBAAW,KAAX,EAAkB,MAAM,GAAN,CAAW,UAAW,GAAX,EAAiB;AACjD,YAAI,MAAM,YAAa,GAAb,CAAV;AACA,YAAK,iBAAO,GAAP,CAAL,EAAoB;AAChB,mBAAO,oCAAqC,IAAK,GAAL,CAArC,EAAiD,GAAjD,CAAP;AACH;AACD,eAAO,GAAP;AACH,KANwB,CAAlB,CAAP;AAOH;;AAEM,SAAS,qBAAT,CAAgC,IAAhC,EAAuC;AAC1C,QAAK,kBAAmB,IAAnB,CAAL,EAAiC;AAC7B,eAAO,KAAP;AACH;AACD,WAAO,IAAP;AACH;;AAED,SAAS,iBAAT,CAA4B,GAA5B,EAAkC;AAC9B,QAAK,iBAAO,GAAP,KAAgB,sBAAY,GAAZ,CAArB,EAAyC;AACrC;AACA,gBAAQ,IAAR,CAAc,yDAAd;AACA,eAAO,IAAP;AACH;AACD,WAAO,KAAP;AACH","file":"typeCheck.js","sourcesContent":["import {\n    traverse,\n    createObj\n} from './utils';\n\nimport {\n    isString,\n    isFunc,\n    isArray,\n    hasOwnProp,\n    isObj,\n    isCircular\n} from './deps';\n\nexport function transformerTypesInCorrect( transformer ) {\n\n    return traverse( transformer, function ( val ) {\n        return val;\n    } ).some( function ( val, index, key ) {\n        if ( isString( val ) ) {\n            return false;\n        }\n        if ( isArray( val ) ) {\n            if ( isString( val[ 0 ] ) ) {\n                return false;\n            }\n            if ( isArray( val ) && val.length == 2 ) {\n                if ( isString( val[ 0 ] ) && isFunc( val[ 1 ] ) ) {\n                    return false;\n                }\n            }\n            console.warn( \"Transformer's key:'\" + key + \"' is not specified properly, must be in the format [String Relocator, Transform Function]. You Specified:\" + JSON.stringify( val ) );\n            return true;\n        }\n        if ( isFunc( val ) ) {\n            return false;\n        }\n        if ( isObj( val ) ) {\n            return transformerTypesInCorrect( val );\n        }\n        console.warn( \"You specified a type that is not associated with a transformer object. You entered: '\" + val + \"' with a type of: '\" + ( typeof val ) + \"' on key:'\" + key + \"'\" );\n        return true;\n    } );\n}\n\nexport function transformerIsInCorrectFormat( transformer ) {\n    if ( checkIfIsCircular( transformer ) || transformerTypesInCorrect( transformer ) ) {\n        return false;\n    }\n    return true;\n}\n\nexport function onlyPropertiesThatCorrespondBetween( obj, transformer ) {\n    let tKeys = Object.keys( transformer ).filter( function ( cur ) {\n        return hasOwnProp( obj, cur );\n    } );\n\n    return createObj( tKeys, tKeys.map( function ( key ) {\n        let val = transformer[ key ];\n        if ( isObj( val ) ) {\n            return onlyPropertiesThatCorrespondBetween( obj[ key ], val );\n        }\n        return val;\n    } ) );\n}\n\nexport function dataIsInCorrectFormat( data ) {\n    if ( checkIfIsCircular( data ) ) {\n        return false;\n    }\n    return true;\n}\n\nfunction checkIfIsCircular( obj ) {\n    if ( isObj( obj ) && isCircular( obj ) ) {\n        //just a check as this is a recursive method\n        console.warn( 'Circular reference found and is unsupported. exiting...' );\n        return true;\n    }\n    return false;\n}\n"]}